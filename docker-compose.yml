services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: compose/frankenphp/Dockerfile
      target: production
    command: >
      frankenphp php-cli
      artisan octane:frankenphp
      --host=0.0.0.0
      --port=8080
      --workers=auto
      --max-requests=5000
    ports:
      - "80:8080"
    tmpfs:
      - /tmp/opcache:size=1G
      - /app/bootstrap/cache:rw,mode=1777,size=512M
      - /tmp/views:size=256M
    volumes:
      - ./:/app:delegated
      - ./compose/frankenphp/php.ini:/usr/local/etc/php/99-custom.ini:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Application
      APP_ENV: production
      APP_DEBUG: false
      APP_KEY: ${APP_KEY:-base64:32characterkeyherepleasereplaceme=}
      LOG_LEVEL: warning
      LOG_CHANNEL: stderr
      # Database
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-horizon_panel}
      DB_USERNAME: ${DB_USERNAME:-user}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      # Cache
      CACHE_DRIVER: redis
      CACHE_PREFIX: ${CACHE_PREFIX:-horizon_panel}
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: redis
      # Redis
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: null
      REDIS_DB: 0
      REDIS_CACHE_DB: 2
      REDIS_SESSION_DB: 1
      REDIS_QUEUE_DB: 3
      # Octane
      OCTANE_SERVER: frankenphp
      # Views cache location
      VIEW_COMPILED_PATH: /tmp/views
      # Ensure no file permission issues
      COMPOSER_ALLOW_SUPERUSER: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "-o", "/dev/null", "http://localhost:8080/up"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 45s
    networks:
      - app-network

  mysql:
    container_name: mysql
    image: mysql:8.0
    command: >
      mysqld
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb_buffer_pool_size=2G
      --innodb_redo_log_capacity=1G
      --innodb_flush_log_at_trx_commit=2
      --innodb_flush_method=O_DIRECT
      --skip-name-resolve
      --innodb_buffer_pool_instances=8
      --innodb_log_buffer_size=256M
      --innodb_thread_concurrency=0
      --max_connections=1000
      --innodb_file_per_table=1
      --innodb_adaptive_hash_index=1
      --innodb_read_io_threads=16
      --innodb_write_io_threads=16
      --innodb_io_capacity=2000
      --innodb_io_capacity_max=4000
      --innodb_lru_scan_depth=2048
      --table_open_cache=8192
      --table_open_cache_instances=16
      --thread_cache_size=100
      --tmp_table_size=512M
      --max_heap_table_size=512M
      --key_buffer_size=64M
      --read_buffer_size=2M
      --read_rnd_buffer_size=8M
      --sort_buffer_size=4M
      --join_buffer_size=4M
      --binlog_cache_size=2M
      --slow_query_log=0
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-logs:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${DB_DATABASE:-horizon_panel}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_INNODB_BUFFER_POOL_SIZE: 2G
      MYSQL_INNODB_REDO_LOG_CAPACITY: 1G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpass}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7.2-alpine
    command: >
      redis-server
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --maxmemory-samples 10
      --appendonly yes
      --appendfsync everysec
      --no-appendfsync-on-rewrite yes
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --tcp-keepalive 60
      --timeout 300
      --databases 16
      --maxclients 2000
      --tcp-backlog 511
      --hash-max-ziplist-entries 512
      --hash-max-ziplist-value 64
      --list-max-ziplist-size -2
      --set-max-intset-entries 512
      --zset-max-ziplist-entries 128
      --zset-max-ziplist-value 64
      --hll-sparse-max-bytes 3000
      --stream-node-max-bytes 4096
      --lazyfree-lazy-eviction yes
      --lazyfree-lazy-expire yes
      --lazyfree-lazy-server-del yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500

volumes:
  mysql-data:
    driver: local
  mysql-logs:
    driver: local
  redis-data:
    driver: local
